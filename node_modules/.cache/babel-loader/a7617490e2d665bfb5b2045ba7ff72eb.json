{"ast":null,"code":"var _jsxFileName = \"/Users/mkelly/react_coderAcademy/class-minimal-app/src/index.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\"; // This creates a redux\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'; // Other files \n\nimport Counter from './counter.js'; // Import CSS\n\nimport \"./index.css\";\nimport SomeContainer from \"./someContainer.js\"; // This defines an initial state incase redux is undefined\n\nconst initialState = {\n  count: 0\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.store = createStore(this.reducer);\n  }\n\n  // The state = initialState basically defines it as 0 instead of undefined \n  reducer(state = initialState, action) {\n    console.log('reducer', state, action);\n    return state;\n  }\n\n  // increment = () => {\n  //   this.setState({ count: this.state.count + 10000 })\n  // }\n  // // This takes 1 away \n  // decrement = () => {\n  //   this.setState({ count: this.state.count - 10000 })\n  // }\n  render() {\n    return React.createElement(Provider, {\n      store: this.store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"arbitrary-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Counter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"another-arbitrary-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(SomeContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/mkelly/react_coderAcademy/class-minimal-app/src/index.js"],"names":["React","render","createStore","Provider","Counter","SomeContainer","initialState","count","App","Component","store","reducer","state","action","console","log","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB,C,CACA;;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,cAApB,C,CAEA;;AACA,OAAO,aAAP;AACA,OAAOC,aAAP,MAA0B,oBAA1B,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAShCC,KATgC,GASxBR,WAAW,CAAE,KAAKS,OAAP,CATa;AAAA;;AAEhC;AACAA,EAAAA,OAAO,CAAEC,KAAK,GAAGN,YAAV,EAAwBO,MAAxB,EAAiC;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAb,EAAwBH,KAAxB,EAA+BC,MAA/B;AACA,WAAOD,KAAP;AACD;;AAKD;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAX,EAAAA,MAAM,GAAI;AACR,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKS,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAE,OAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAE,aAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADF,CADF;AAaD;;AAlC+B;;AAqClCT,MAAM,CAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAUe,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\n// This creates a redux\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\n// Other files \nimport Counter from './counter.js';\n\n// Import CSS\nimport \"./index.css\";\nimport SomeContainer from \"./someContainer.js\";\n\n// This defines an initial state incase redux is undefined\nconst initialState = { count: 0 };\n\nclass App extends React.Component {\n\n  // The state = initialState basically defines it as 0 instead of undefined \n  reducer( state = initialState, action ) {\n    console.log( 'reducer', state, action )\n    return state\n  };\n\n  // Store is where we hold the data and actions redux \n  store = createStore( this.reducer );\n\n  // increment = () => {\n  //   this.setState({ count: this.state.count + 10000 })\n  // }\n\n  // // This takes 1 away \n  // decrement = () => {\n  //   this.setState({ count: this.state.count - 10000 })\n  // }\n\n  render () {\n    return (\n      <Provider store={this.store}>\n        <div>\n          <div className=\"arbitrary-block\">\n            {/* The below renders the counter file */}\n            < Counter />\n          </div>\n          <div className=\"another-arbitrary-block\">\n            < SomeContainer />\n          </div>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}