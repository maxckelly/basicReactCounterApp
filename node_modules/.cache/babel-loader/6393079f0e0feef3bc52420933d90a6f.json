{"ast":null,"code":"var _jsxFileName = \"/Users/mkelly/react_coderAcademy/class-minimal-app/src/counter.js\";\nimport React from 'react'; // This allows us to connect to react-redux\n\nimport { connect } from 'react-redux'; // Imports CSS Document\n\nimport './counter.css';\n\nfunction mapStateToProps(state) {\n  return {\n    count: state.count\n  };\n}\n\nclass Counter extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.increment = () => {\n      this.sendToStore(this.props.count + 1);\n    };\n\n    this.decrement = () => {\n      this.sendToStore(this.props.count - 1);\n    };\n\n    this.plusTen = () => {\n      this.sendToStore(this.props.count + 10);\n    };\n  }\n\n  sendToStore(count) {\n    this.props.dispatch({\n      type: \"UPDATE_COUNT\",\n      newCount: count\n    });\n  }\n\n  // This re renders thr app as well as adds the buttons etc... in \n  render() {\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" Counter \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.decrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" - \"), React.createElement(\"span\", {\n      className: \"count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.count), React.createElement(\"button\", {\n      onClick: this.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \" + \"), React.createElement(\"button\", {\n      onClick: this.plusTen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" ++ \")));\n  }\n\n}\n\nexport default connect(mapStateToProps)(Counter);","map":{"version":3,"sources":["/Users/mkelly/react_coderAcademy/class-minimal-app/src/counter.js"],"names":["React","connect","mapStateToProps","state","count","Counter","Component","increment","sendToStore","props","decrement","plusTen","dispatch","type","newCount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAO,eAAP;;AAEA,SAASC,eAAT,CAA0BC,KAA1B,EAAkC;AAChC,SAAO;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAP;AACD;;AACD,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAOpCC,SAPoC,GAOxB,MAAM;AAChB,WAAKC,WAAL,CAAkB,KAAKC,KAAL,CAAWL,KAAX,GAAmB,CAArC;AACD,KATmC;;AAAA,SAYpCM,SAZoC,GAYxB,MAAM;AAChB,WAAKF,WAAL,CAAkB,KAAKC,KAAL,CAAWL,KAAX,GAAmB,CAArC;AACD,KAdmC;;AAAA,SAgBpCO,OAhBoC,GAgB1B,MAAM;AACd,WAAKH,WAAL,CAAkB,KAAKC,KAAL,CAAWL,KAAX,GAAmB,EAArC;AACD,KAlBmC;AAAA;;AAEpCI,EAAAA,WAAW,CAAEJ,KAAF,EAAS;AAClB,SAAKK,KAAL,CAAWG,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,QAAQ,EAAEV;AAAlC,KAApB;AACD;;AAgBD;AACAW,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAQ,MAAA,OAAO,EAAE,KAAKL,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKD,KAAL,CAAWL,KAApC,CAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKG,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAQ,MAAA,OAAO,EAAE,KAAKI,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CAFF,CADF;AAYD;;AAlCmC;;AAqCtC,eAAeV,OAAO,CAAEC,eAAF,CAAP,CAA4BG,OAA5B,CAAf","sourcesContent":["import React from 'react';\n// This allows us to connect to react-redux\nimport { connect } from 'react-redux';\n\n// Imports CSS Document\nimport './counter.css';\n\nfunction mapStateToProps( state ) {\n  return { count: state.count };\n}\nclass Counter extends React.Component {\n\n  sendToStore (count) {\n    this.props.dispatch({ type: \"UPDATE_COUNT\", newCount: count })\n  };\n  // The dispatch says create an action object and I will then send it to the reducer on index.js.\n  // The type allows us to link the the types to the reducer\n  increment = () => {\n    this.sendToStore( this.props.count + 1 ); \n  };\n\n  // This takes 1 away \n  decrement = () => {\n    this.sendToStore( this.props.count - 1 ); \n  };\n\n  plusTen = () => {\n    this.sendToStore( this.props.count + 10);\n  }\n\n  // This re renders thr app as well as adds the buttons etc... in \n  render(){\n    return (\n      <div className=\"counter\">\n        <h2> Counter </h2>\n        <div>\n          {/* Because we have the dispatch above we only need to call 'this.functionName' */}\n          <button onClick={this.decrement}> - </button>\n          <span className=\"count\">{this.props.count}</span>\n          <button onClick={this.increment}> + </button>\n          <button onClick={this.plusTen}> ++ </button>\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default connect( mapStateToProps )( Counter );"]},"metadata":{},"sourceType":"module"}