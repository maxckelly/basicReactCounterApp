{"ast":null,"code":"var _jsxFileName = \"/Users/mkelly/react_coderAcademy/class-minimal-app/src/index.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\"; // This creates a redux\n\nimport { createStore } from 'redux'; // Other files \n\nimport Counter from './counter.js'; // Import CSS\n\nimport \"./index.css\";\nimport SomeContainer from \"./someContainer.js\"; // This defines an initial state incase redux is undefined\n\nconst initialState = {\n  count: 0\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.store = createStore(this.reducer);\n    this.state = {\n      count: 0\n    };\n\n    this.increment = () => {\n      this.setState({\n        count: this.state.count + 10000\n      });\n    };\n\n    this.decrement = () => {\n      this.setState({\n        count: this.state.count - 10000\n      });\n    };\n  }\n\n  // The state = initialState basically defines it as 0 instead of undefined \n  reducer(state = initialState, action) {\n    console.log('reducer', state, action);\n    return state;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"arbitrary-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Counter, {\n      count: this.state.count,\n      increment: this.increment,\n      decrement: this.decrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"another-arbitrary-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(SomeContainer, {\n      count: this.state.count,\n      increment: this.increment,\n      decrement: this.decrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/mkelly/react_coderAcademy/class-minimal-app/src/index.js"],"names":["React","render","createStore","Counter","SomeContainer","initialState","count","App","Component","store","reducer","state","increment","setState","decrement","action","console","log","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB,C,CACA;;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,cAApB,C,CAEA;;AACA,OAAO,aAAP;AACA,OAAOC,aAAP,MAA0B,oBAA1B,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAShCC,KATgC,GASxBP,WAAW,CAAE,KAAKQ,OAAP,CATa;AAAA,SAUhCC,KAVgC,GAUxB;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAVwB;;AAAA,SAYhCM,SAZgC,GAYpB,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,KAAX,GAAmB;AAA5B,OAAd;AACD,KAd+B;;AAAA,SAiBhCQ,SAjBgC,GAiBpB,MAAM;AAChB,WAAKD,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,KAAX,GAAmB;AAA5B,OAAd;AACD,KAnB+B;AAAA;;AAEhC;AACAI,EAAAA,OAAO,CAAEC,KAAK,GAAGN,YAAV,EAAwBU,MAAxB,EAAiC;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAb,EAAwBN,KAAxB,EAA+BI,MAA/B;AACA,WAAOJ,KAAP;AACD;;AAeDV,EAAAA,MAAM,GAAI;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAE,OAAF;AACE,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWL,KADpB;AAEE,MAAA,SAAS,EAAE,KAAKM,SAFlB;AAGE,MAAA,SAAS,EAAE,KAAKE,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EASE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAE,aAAF;AACE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWL,KADpB;AAEE,MAAA,SAAS,EAAE,KAAKM,SAFlB;AAGE,MAAA,SAAS,EAAE,KAAKE,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF;AAmBD;;AAzC+B;;AA4ClCb,MAAM,CAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAUiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\n// This creates a redux\nimport { createStore } from 'redux';\n\n// Other files \nimport Counter from './counter.js';\n\n// Import CSS\nimport \"./index.css\";\nimport SomeContainer from \"./someContainer.js\";\n\n// This defines an initial state incase redux is undefined\nconst initialState = { count: 0 };\n\nclass App extends React.Component {\n\n  // The state = initialState basically defines it as 0 instead of undefined \n  reducer( state = initialState, action ) {\n    console.log( 'reducer', state, action )\n    return state\n  };\n\n  // Store is where we hold the data and actions redux \n  store = createStore( this.reducer );\n  state = { count: 0 };\n\n  increment = () => {\n    this.setState({ count: this.state.count + 10000 })\n  }\n\n  // This takes 1 away \n  decrement = () => {\n    this.setState({ count: this.state.count - 10000 })\n  }\n\n  render () {\n    return (\n      <div>\n        <div className=\"arbitrary-block\">\n          {/* The below renders the counter file */}\n          < Counter \n            count={this.state.count}\n            increment={this.increment}\n            decrement={this.decrement}\n          />\n        </div>\n        <div className=\"another-arbitrary-block\">\n          < SomeContainer \n            count={this.state.count}\n            increment={this.increment}\n            decrement={this.decrement}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}